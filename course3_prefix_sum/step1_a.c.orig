#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>
#include <time.h>

#define N ((long long int) 1E+6)
#define VALID_N(n) (1 <= n && n <= N)

int getnum(long long int *num);

int main()
{
	long long int n, i, num;
	long long int *a, *b;	
	double st, et;

	scanf("%lld", &n);
	if (!VALID_N(n)) {
		printf("0\n");
		return (0);
	}
	a = (long long int *) calloc(N, sizeof(long long int));
	b = (long long int *) calloc(N+1, sizeof(long long int));

	getchar();

	st = clock();
	for (i = 0; (i < n) && (getnum(&num) != 0); ++i) {
		a[i] = num;
	}
	printf("0 ");
	for (i = 1; (i <= n); ++i) {
		b[i] = (long long int) (a[i-1] + b[i-1]);
		printf("%lld ", b[i]);
	}
	et = clock();
	printf("\ntime: %f ns\n", (et-st) / CLOCKS_PER_SEC);

	free(a);
	free(b);

	return (0);
}

int getnum(long long int *num)
{
	int c;
	long long int sign = 1;
	*num = 0;
	while ((c = getchar()) == ' ')
		;
	if (c == '-')
		sign = -1;	
	else
		*num = c - '0';
	while (((c=getchar()) != EOF) && (c != ' ') && (c != '\n')) {
		*num = (*num * (long long int) 10) + (long long int)(c - '0');
	}
	*num *= sign;
	if (c == EOF)
		return 0;
	return 1;
}
